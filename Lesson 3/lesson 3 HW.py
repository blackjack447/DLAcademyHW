#EASY
# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.
# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2. банан
# 3. киви
# 4. арбуз
# Подсказка: воспользоваться методом .format()
spisok_fruktov = ["яблоко", "банан", "киви", "арбуз"]
for i, spisok_fruktov in enumerate(spisok_fruktov):
    print(i+1, spisok_fruktov.rjust(8,' '), sep='.')

print('\n')

spisok_fruktov = ["яблоко", "банан", "киви", "арбуз"]
a = len(spisok_fruktov)
for i in range(a):
    print('{}{}{}'.format(i+1,'.',spisok_fruktov[i].rjust(8,' ')))

print('\n')
# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.
spisok_1 = [1,2,8,45,184,455,65]
spisok_2 = [24,58,455,68,8,87,45]
new_spisok = set(spisok_1 + spisok_2)
print(new_spisok)

print('\n')
# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.
spisok = [10,2,8,45,184,455,65]
new_spisok = []
for i in spisok:
    if i % 2 == 0:
        new_spisok.append(i / 4)
    else:
        if i % 2 != 0:
            new_spisok.append(i * 2)
print(new_spisok)

print('\n')
#NORMAL
# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4] Результат: [3, 5, 2]
from math import *
spisok = [2, -5, 8, 9, -25, 25, 4] # 2 - 1.414, -5 - error, 8 - 2.83, {9 - 3, 25-5, 4-2}
new_spisok = []
for i in spisok:
    if (i > 0) and (int(sqrt(i)) == sqrt(i)):
        new_spisok.append(int(sqrt(i)))
print(new_spisok)

print('\n')
# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
data = input('Введите дату в формате дд.мм.гггг - ')
data_list = data.split('.')
day = {'01':'первое','02':'второе','03':'третье','04':'четвертое','05':'пятое','06':'шестое','07':'седьмое','08':'восьмое','09':'девятое','10':'десятое',
'11':'одиннадцатое','12':'двенадцатое','13':'тринадцатое','14':'четырнадцатое','15':'пятнадцатое','16':'шестнадцатое','17':'семнадцатое','18':'восемнадцатое',
'19':'девятнадцатое','20':'двацатое','21':'двадцать первое','22':'двадцать второе','23':'двадцать третье','24':'двадцать четвертое','25':'двадцать пятое',
'26':'двадцать шестое','27':'двадцать седьмое','28':'двадцать восьмое','29':'двадцать девятое','30':'тридцатое','31':'тридцать первое',}
month = {'01':'января','02':'февраля','03':'марта','04':'апреля','05':'мая','06':'июня','07':'июля','08':'августа','09':'сентября','10':'октября',
'11':'ноября','12':'декабря',}
for key in day:
    if data_list[0] == key:
        data_list[0] = day[key]
        print(day[key],end = ' ')
for key in month:
    if data_list[1] == key:
        data_list[1] = month[key]
        print(month[key],end = ' ')
print(data_list[2],'года')

print('\n')
# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
import random
num = int(input('Сколько элементов хотите ? - '))
num_list = []
for i in range(num):
    num_list.append(random.randint(-100,100))
print(num_list)

print('\n')
# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

# а) неповторяющиеся элементы исходного списка:
#например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
spisok = [1, 2, 4, 5, 6, 2, 5, 2]
new_spisok_a = []
num = set(spisok)
for i in num:
    new_spisok_a.append(i)
print(new_spisok_a)

#б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
new_spisok_b = []
for i in spisok:
    if spisok.count(i) == 1:
        new_spisok_b.append(i)
print(new_spisok_b)

print('\n')
#HARD
# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y
equation = 'y = -12x + 11111140.2121'
x = 2.5
znachenya = equation.split(' ')
k = znachenya[2]
k_chislo = k[:-1]
b = znachenya[4]
y = float(k_chislo) * x + float(b)
print(y)

print('\n')
# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
# (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
# (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)
# Пример корректной даты
#date = '01.11.1985'
# Примеры некорректных дат
#date = '01.22.1001'
#date = '1.12.1001'
#date = '-2.10.3001'
date = input('Введите дату в формате дд.мм.гггг - ')
date_chisla = date.split('.')
day = int(date_chisla[0])
month = int(date_chisla[1])
year = int(date_chisla[2])
large_month = [1,3,5,7,8,10,12] #месяца с 31 днями
if len(date_chisla[0]) != 2 or len(date_chisla[1])!=2 or len(date_chisla[2]) !=4:
    print('Введенная дата не корректа')
elif day > 30 and month not in large_month:
    print('Больше 30, быть не может')
elif 1 < day > 31:
    print('Некорректный день')
elif 1 < month > 12:
    print('Некорректный месяц')
elif 1 < year > 9999:
    print('Некорректный год')
else:
    print('Дата - корректна')